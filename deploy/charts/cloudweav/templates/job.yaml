{{- if .Values.jobs.preDelete.enabled }}
{{- $isKubeVirtOperatorEnabled := eq ( include "conditions.is_kubevirt_operator_enabled" . ) "true" -}}
{{- if $isKubeVirtOperatorEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
  # NB(thxCode): name should not be customized as below:
  # name: {{ template "cloudweav.fullname" . }}-pre-delete
  # because we can easily confirm this resource from the corresponding namespace.
  name: cloudweav-pre-delete
  labels:
{{ include "cloudweav.labels" . | indent 4 }}
    app.kubernetes.io/name: cloudweav
    app.kubernetes.io/component: apiserver
spec:
{{- if .Values.jobs.preDelete.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .Values.jobs.preDelete.activeDeadlineSeconds }}
{{- end }}
{{- if .Values.jobs.preDelete.backoffLimit }}
  backoffLimit: {{ .Values.jobs.preDelete.backoffLimit }}
{{- end }}
{{- if .Values.jobs.preDelete.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.jobs.preDelete.ttlSecondsAfterFinished }}
{{- end }}
  template:
    metadata:
      name: cloudweav-pre-delete
      labels:
{{ include "cloudweav.immutableLabels" . | indent 8 }}
        app.kubernetes.io/name: pre-delete
        app.kubernetes.io/component: job
    spec:
      # NB(thxCode): reuse the "cloudweav" ServiceAccount under the same namespace.
      serviceAccountName: cloudweav
{{- if .Values.jobs.preDelete.restartPolicy }}
      restartPolicy: {{ .Values.jobs.preDelete.restartPolicy }}
{{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      containers:
        - name: pre-delete
          image: {{ .Values.upgrade.image.repository }}:{{ .Values.upgrade.image.tag }}
          imagePullPolicy: {{ .Values.jobs.preDelete.containers.kubectl.image.imagePullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            - >
              {{ if $isKubeVirtOperatorEnabled }}
              echo '[INFO] deleting kubevirt ...';
              kubectl delete kubevirt --wait --all;
              {{ end }}
              echo 'delete cloudweav webhooks cloudweav-validator'
              kubectl delete ValidatingWebhookConfiguration -n cloudweav-system cloudweav-validator --force || echo 'kubectl failed'
              exit
{{- if .Values.jobs.preDelete.containers.kubectl.resources }}
          resources:
{{ toYaml .Values.jobs.preDelete.containers.kubectl.resources | indent 12 }}
{{- end }}
{{- end }}
{{- end }}
